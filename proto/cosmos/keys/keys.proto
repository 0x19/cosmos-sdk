syntax = "proto3";
package cosmos.crypto;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/cosmos/cosmos-sdk/crypto/keys";

// MultisigThresholdPubKey specifies a public key type which nests multiple public
// keys and a threshold
message MultisigThresholdPubKey {
    uint32 threshold = 1 [(gogoproto.customname) = "K", (gogoproto.moretags) = "yaml:\"threshold\""];
    repeated google.protobuf.Any public_keys = 2 [(gogoproto.customname) = "PubKeys", (gogoproto.moretags) = "yaml:\"pubkeys\""];
}

// LegacyAminoMultisigThresholdPubKey is a version of MultisigThresholdPubKey which uses legacy amino address rules
message LegacyAminoMultisigThresholdPubKey {
    uint32 threshold = 1 [(gogoproto.customname) = "K", (gogoproto.moretags) = "yaml:\"threshold\""];
    repeated google.protobuf.Any public_keys = 2 [(gogoproto.customname) = "PubKeys", (gogoproto.moretags) = "yaml:\"pubkeys\""];
}

message Secp256K1PubKey {
    bytes key = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/crypto/keys/secp256k1.PubKey"];
}

message Secp256K1PrivKey {
    bytes key = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/crypto/keys/secp256k1.PrivKey"];
}