syntax = "proto3";
package cosmos.authz.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto"; 
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package            = "github.com/cosmos/cosmos-sdk/x/authz/types";

// SendAuthorization allows the grantee to spend up to spend_limit coins from
// the granter's account.
message SendAuthorization{
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters)  = false;
    option (cosmos_proto.implements_interface) = "Authorization";

    repeated cosmos.base.v1beta1.Coin spend_limit = 1 [
        (gogoproto.nullable)     = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags) = "yaml:\"spend_limit\""
    ];
}

// GenericAuthorization gives the grantee unrestricted permissions to execute
// the provide method on behalf of the granter's account.
message GenericAuthorization{
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters)  = false;
    option (cosmos_proto.implements_interface) = "Authorization";

    string method_name = 1[
        (gogoproto.customname)="MessageName"
    ];
}

// TODO
message AuthorizationGrant{
    option (gogoproto.goproto_getters)  = false;
    google.protobuf.Any authorization = 1 [
        (cosmos_proto.accepts_interface) = "Authorization"
    ];
    int64 expiration = 2;
}
