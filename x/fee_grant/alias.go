// nolint
// autogenerated code using github.com/rigelrozanski/multitool
// aliases generated for the following subdirectories:
// ALIASGEN: github.com/cosmos/cosmos-sdk/x/fee_grant/internal/types
// ALIASGEN: github.com/cosmos/cosmos-sdk/x/fee_grant/internal/keeper
package fee_grant

import (
	"github.com/cosmos/cosmos-sdk/x/fee_grant/internal/keeper"
	"github.com/cosmos/cosmos-sdk/x/fee_grant/internal/types"
)

const (
	DefaultCodespace      = types.DefaultCodespace
	CodeFeeLimitExceeded  = types.CodeFeeLimitExceeded
	CodeFeeLimitExpired   = types.CodeFeeLimitExpired
	CodeInvalidPeriod     = types.CodeInvalidPeriod
	ModuleName            = types.ModuleName
	StoreKey              = types.StoreKey
	RouterKey             = types.RouterKey
	QuerierRoute          = types.QuerierRoute
	QueryGetFeeAllowances = keeper.QueryGetFeeAllowances
)

var (
	// functions aliases
	RegisterCodec               = types.RegisterCodec
	ErrFeeLimitExceeded         = types.ErrFeeLimitExceeded
	ErrFeeLimitExpired          = types.ErrFeeLimitExpired
	ErrInvalidPeriod            = types.ErrInvalidPeriod
	ExpiresAtTime               = types.ExpiresAtTime
	ExpiresAtHeight             = types.ExpiresAtHeight
	ClockPeriod                 = types.ClockPeriod
	BlockPeriod                 = types.BlockPeriod
	FeeAllowanceKey             = types.FeeAllowanceKey
	FeeAllowancePrefixByGrantee = types.FeeAllowancePrefixByGrantee
	NewMsgGrantFeeAllowance     = types.NewMsgGrantFeeAllowance
	NewMsgRevokeFeeAllowance    = types.NewMsgRevokeFeeAllowance
	NewKeeper                   = keeper.NewKeeper
	NewQuerier                  = keeper.NewQuerier

	// variable aliases
	ModuleCdc             = types.ModuleCdc
	FeeAllowanceKeyPrefix = types.FeeAllowanceKeyPrefix
)

type (
	BasicFeeAllowance     = types.BasicFeeAllowance
	ExpiresAt             = types.ExpiresAt
	Period                = types.Period
	FeeAllowanceGrant     = types.FeeAllowanceGrant
	MsgGrantFeeAllowance  = types.MsgGrantFeeAllowance
	MsgRevokeFeeAllowance = types.MsgRevokeFeeAllowance
	Keeper                = keeper.Keeper
)
