syntax = "proto3";
package cosmos_sdk.x.ibc.commitment.v1;

option go_package = "github.com/cosmos/cosmos-sdk/x/ibc/23-commitment";

import "third_party/proto/cosmos-proto/cosmos.proto";
import "third_party/proto/gogoproto/gogo.proto";
import "third_party/proto/tendermint/crypto/merkle/merkle.proto";


message RootI {
  option (cosmos_proto.interface_type) = "*github.com/cosmos/cosmos-sdk/x/ibc/23-commitment.RootI";
  
  // sum defines a list of all acceptable concrete Root implementations.
  oneof sum {
    Root merkle = 1;
  }
}

message PrefixI {
  option (cosmos_proto.interface_type) = "*github.com/cosmos/cosmos-sdk/x/ibc/23-commitment.PrefixI";

  oneof sum {
    // sum defines a list of all acceptable concrete Prefix implementations.
    Prefix merkle = 1;
  }
}

message PathI {
  option (cosmos_proto.interface_type) = "*github.com/cosmos/cosmos-sdk/x/ibc/23-commitment.PathI";
  
  // sum defines a list of all acceptable concrete Path implementations.
  oneof sum {
    Path merkle = 1;
  }
}

message ProofI {
  option (cosmos_proto.interface_type) = "*github.com/cosmos/cosmos-sdk/x/ibc/23-commitment.ProofI";

   // sum defines a list of all acceptable concrete Proof implementations.
  oneof sum {
    Proof merkle = 1;
  }
}

message Root {
	bytes hash = 1;
}

message Prefix {
	bytes key_prefix = 1;
}

message Path {
	repeated tendermint.crypto.merkle.Key key_path = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/tendermint/tendermint/crypto/merkle.KeyPath"
  ];
}

message Proof {
  tendermint.crypto.merkle.Proof proof = 1;
}